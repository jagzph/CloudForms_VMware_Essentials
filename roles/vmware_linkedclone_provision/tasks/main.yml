---
- name: Check snapshot variable, if exists set linked_clone to true
  set_fact:
    linked_clone: true
  when: snapshot is defined

- name: Provision vmware instances asynchronously
  vmware_guest:
    hostname: "{{ hostname }}"
    username: "{{ username }}"
    password: "{{ password }}"
    validate_certs: "{{ validate_certs }}"
    name: "{{ item }}"
    template: "{{ template }}"
    datacenter: "{{ datacenter }}"
    cluster: "{{ cluster }}"
    folder: "{{ folder }}"
    snapshot_src: "{{ snapshot }}"
    linked_clone: "{{ linked_clone }}"
    notes: "{{ notes }}"
    hardware:
      memory_mb: "{{ memory_mb }}"
      num_cpus: "{{ num_cpus }}"
    wait_for_ip_address: "{{ wait_for_ip_address }}"
    networks: "{{ vm_networks }}"
    state: "{{ state }}"
  delegate_to: localhost
  with_items: "{{ vm_names }}"
  register: vmware_created_vms_async
  async: 3600 # wait up to an hour for cloning to complete
  poll: 0

- name: Wait for instance creation to complete
  async_status: jid={{ item.ansible_job_id }}
  register: vmware_created_vms
  until: vmware_created_vms.finished
  retries: 100
  with_items: "{{ vmware_created_vms_async.results }}"

- name: Log item.instance.ipv4
  debug:
    var: item.instance.ipv4
  with_items: "{{ vmware_created_vms.results }}"
  when: wait_for_ip_address

- name: "Add {{ item.instance.hw_name }},{{ item.instance.ipv4 }} ip address to a vmware_hosts group"
  add_host:
    name: "{{ item.instance.ipv4 }}"
    groups: vmware_hosts
  with_items: "{{ vmware_created_vms.results }}"
  when: wait_for_ip_address
